// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4555.MechanumWheelzTest.commands;

import edu.wpi.first.wpilibj.command.Command;

import org.usfirst.frc4555.MechanumWheelzTest.Robot;
import org.usfirst.frc4555.MechanumWheelzTest.RobotMap;

/**
 *
 */
public class  MecanumDrive extends Command {

    public MecanumDrive() {
        // Use requires() here to declare subsystem dependencies
        // eg. requires(chassis);

        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.driveTrain);
        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    	
    	if ((Robot.oi.joystick.getY() >= .3) && (Robot.oi.joystick.getX() < .3) && (Robot.oi.joystick.getX() > -.3)) {
    		
    		RobotMap.driveTrainSpeedController1.set(-Robot.oi.joystick.getY());
    		RobotMap.driveTrainSpeedController2.set(-Robot.oi.joystick.getY());
    		RobotMap.driveTrainSpeedController3.set(-Robot.oi.joystick.getY());
    		RobotMap.driveTrainSpeedController4.set(-Robot.oi.joystick.getY());
    		
    	} else if ((Robot.oi.joystick.getY() <= -.3) && (Robot.oi.joystick.getX() < .3) && (Robot.oi.joystick.getX() > -.3)) {
    		
    		RobotMap.driveTrainSpeedController1.set(-Robot.oi.joystick.getY());
    		RobotMap.driveTrainSpeedController2.set(-Robot.oi.joystick.getY());
    		RobotMap.driveTrainSpeedController3.set(-Robot.oi.joystick.getY());
    		RobotMap.driveTrainSpeedController4.set(-Robot.oi.joystick.getY());
    		
    	} else if ((Robot.oi.joystick.getX() >= .3) && (Robot.oi.joystick.getY() < .3) && (Robot.oi.joystick.getY() > -.3)) {
    		
    		RobotMap.driveTrainSpeedController1.set(Robot.oi.joystick.getX());
    		RobotMap.driveTrainSpeedController2.set(-Robot.oi.joystick.getX());
    		RobotMap.driveTrainSpeedController3.set(-Robot.oi.joystick.getX());
    		RobotMap.driveTrainSpeedController4.set(Robot.oi.joystick.getX());
    		
    	} else if ((Robot.oi.joystick.getX() <= -.3) && (Robot.oi.joystick.getY() < .3) && (Robot.oi.joystick.getY() > -.3)) {
    		
    		RobotMap.driveTrainSpeedController1.set(Robot.oi.joystick.getX());
    		RobotMap.driveTrainSpeedController2.set(-Robot.oi.joystick.getX());
    		RobotMap.driveTrainSpeedController3.set(-Robot.oi.joystick.getX());
    		RobotMap.driveTrainSpeedController4.set(Robot.oi.joystick.getX());
    		
    	} else if ((Robot.oi.joystick.getX() < .3) && (Robot.oi.joystick.getX() > -.3) && (Robot.oi.joystick.getY() < .3) && (Robot.oi.joystick.getY() > -.3) && (Robot.oi.joystick.getTwist() >= .9)) {
    		
    		RobotMap.driveTrainSpeedController1.set(.9);
    		RobotMap.driveTrainSpeedController2.set(-.9);
    		RobotMap.driveTrainSpeedController3.set(.9);
    		RobotMap.driveTrainSpeedController4.set(-.9);
    		
    	}
    	
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return false;
    }

    // Called once after isFinished returns true
    protected void end() {
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    }
}
